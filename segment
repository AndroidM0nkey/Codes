//gcd,max,min,sum
int gcd(int a, int b) {
	return b ? gcd(b, a % b) : a;
}

const int maxn = 10e5+1;
int n;
int t[4 * maxn];
//build(a, 1, 0, n - 1);

void build(vector<int> &a, int v, int l, int r) {

	if (l == r) {
		t[v] = a[l];
	}
	else {
		int mid = (l + r) / 2;
		build(a, 2 * v, l, mid);
		build(a, 2 * v + 1, mid+1, r);
		t[v] = t[2 * v] + t[2 * v + 1]; // заменить + на любую нужную операцию на монойде
	}
}



//sum(1,0,n-1,l,r)
int sum(int v, int tl, int tr, int l, int r) {
	if (l > r)
		return 0;
	if (l == tl && r == tr)
		return t[v];
	int tm = (tl + tr) / 2;
	return sum(v * 2, tl, tm, l, min(r, tm))
		+ sum(v * 2 + 1, tm + 1, tr, max(l, tm + 1), r);
}
//update(1,0,n-1,pos,val)
void update(int v, int tl, int tr, int pos, int new_val) {
	if (tl == tr)
		t[v] = new_val;
	else {
		int tm = (tl + tr) / 2;
		if (pos <= tm)
			update(v * 2, tl, tm, pos, new_val);
		else
			update(v * 2 + 1, tm + 1, tr, pos, new_val);
		t[v] = t[v * 2] + t[v * 2 + 1];
	}
}
